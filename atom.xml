<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>任玉祥</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://yuxiang.ren/"/>
  <updated>2017-08-11T01:16:31.000Z</updated>
  <id>https://yuxiang.ren/</id>
  
  <author>
    <name>任玉祥</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ViewController滚动标题</title>
    <link href="https://yuxiang.ren/2017/08/10/ViewController%E6%BB%9A%E5%8A%A8%E6%A0%87%E9%A2%98/"/>
    <id>https://yuxiang.ren/2017/08/10/ViewController滚动标题/</id>
    <published>2017-08-10T09:20:52.000Z</published>
    <updated>2017-08-11T01:16:31.000Z</updated>
    
    <content type="html"><![CDATA[<p>默认情况下控制器标题过长导致无法全部显示, 解决此问题就要让标题可以滚动.</p>
<p>实现很简单, 只要把<code>navigationItem.titleView</code>赋值一个<code>UIScrollView</code>, 并且让这个<code>UIScrollView</code>自动滚动就可以了.</p>
<a id="more"></a>
<h1 id="一-定义一个创建一个继承与UIScrollerView的类"><a href="#一-定义一个创建一个继承与UIScrollerView的类" class="headerlink" title="一. 定义一个创建一个继承与UIScrollerView的类"></a>一. 定义一个创建一个继承与UIScrollerView的类</h1><ol>
<li><p>头文件</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">CTScrollTitleView</span> : <span class="title">UIScrollView</span></span></div><div class="line"></div><div class="line">  <span class="comment">/** 文字 */</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>, <span class="keyword">readonly</span>) <span class="built_in">NSString</span> *title;</div><div class="line"></div><div class="line"><span class="comment">/** 实例化对象 */</span></div><div class="line">+ (<span class="keyword">instancetype</span>)titleViewWithTitle:(<span class="built_in">NSString</span> *)title;</div><div class="line">- (<span class="keyword">instancetype</span>)initWithTitle:(<span class="built_in">NSString</span> *)title;</div><div class="line"></div><div class="line"><span class="keyword">@end</span></div></pre></td></tr></table></figure>
</li>
<li><p>.m文件</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">CTScrollTitleView</span></span></div><div class="line"></div><div class="line">+ (<span class="keyword">instancetype</span>)titleViewWithTitle:(<span class="built_in">NSString</span> *)title</div><div class="line">&#123;</div><div class="line">   <span class="keyword">return</span> [[<span class="keyword">self</span> alloc] initWithTitle:title];</div><div class="line">&#125;</div><div class="line"></div><div class="line">- (<span class="keyword">instancetype</span>)initWithTitle:(<span class="built_in">NSString</span> *)title</div><div class="line">&#123;</div><div class="line">   <span class="keyword">if</span> (title==<span class="literal">nil</span>) <span class="keyword">return</span> <span class="literal">nil</span>;</div><div class="line"></div><div class="line">   <span class="keyword">if</span> (<span class="keyword">self</span> = [<span class="keyword">super</span> initWithFrame:<span class="built_in">CGRectZero</span>]) &#123;</div><div class="line"></div><div class="line">       _title = title;</div><div class="line">       <span class="keyword">self</span>.frame = <span class="built_in">CGRectMake</span>(<span class="number">0</span>, <span class="number">0</span>, screenWidth<span class="number">-128</span>, <span class="number">44</span>);</div><div class="line">       <span class="keyword">self</span>.scrollEnabled = <span class="literal">false</span>;</div><div class="line">       <span class="keyword">self</span>.showsVerticalScrollIndicator = <span class="literal">false</span>;</div><div class="line">       <span class="keyword">self</span>.showsHorizontalScrollIndicator = <span class="literal">false</span>;</div><div class="line"></div><div class="line">       <span class="built_in">UILabel</span> *label = [<span class="built_in">UILabel</span> new];</div><div class="line">       label.font = [<span class="built_in">UIFont</span> boldSystemFontOfSize:<span class="number">16</span>];</div><div class="line">       label.frame = <span class="keyword">self</span>.bounds;</div><div class="line">       label.textAlignment = <span class="built_in">NSTextAlignmentCenter</span>;</div><div class="line">       label.text = title;</div><div class="line">       [<span class="keyword">self</span> addSubview: label];</div><div class="line"></div><div class="line">     <span class="comment">// 计算文字的宽度</span></div><div class="line">   <span class="built_in">CGFloat</span> width = [label.text boundingRectWithSize:<span class="built_in">CGSizeMake</span>(MAXFLOAT, label.height)</div><div class="line">                                            options:</div><div class="line">                     <span class="built_in">NSStringDrawingTruncatesLastVisibleLine</span> |</div><div class="line">                     <span class="built_in">NSStringDrawingUsesLineFragmentOrigin</span> |</div><div class="line">                     <span class="built_in">NSStringDrawingUsesFontLeading</span></div><div class="line">                                         attributes:@&#123;<span class="built_in">NSFontAttributeName</span>: label.font&#125;</div><div class="line">                                            context:<span class="literal">nil</span>].size.width;</div><div class="line">     <span class="comment">// 只有文字宽度大于scrollview的宽度才需要滚动</span></div><div class="line">       <span class="keyword">if</span> (width &gt; <span class="keyword">self</span>.frame.size.width) &#123; </div><div class="line">           <span class="built_in">CGRect</span> frame = label.frame;</div><div class="line">           frame.size.width = width;</div><div class="line">           label.frame = frame;</div><div class="line"></div><div class="line">           <span class="built_in">CGSize</span> contentSize = <span class="keyword">self</span>.contentSize;</div><div class="line">           contentSize.width = width;</div><div class="line">           <span class="keyword">self</span>.contentSize = contentSize;</div><div class="line"></div><div class="line">           [<span class="keyword">self</span> startAnimate];</div><div class="line">       &#125;</div><div class="line">   &#125;</div><div class="line"></div><div class="line">   <span class="keyword">return</span> <span class="keyword">self</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/** 滚动动画 */</span></div><div class="line">- (<span class="keyword">void</span>)startAnimate &#123;</div><div class="line"></div><div class="line">   <span class="built_in">NSTimeInterval</span> time = <span class="keyword">self</span>.contentSize.width * <span class="number">0.01</span>;</div><div class="line"></div><div class="line">   <span class="built_in">CGPoint</span> offset = <span class="keyword">self</span>.contentOffset;</div><div class="line">   offset.x = <span class="keyword">self</span>.contentSize.width - <span class="keyword">self</span>.frame.size.width;</div><div class="line"></div><div class="line">   __<span class="keyword">weak</span> <span class="keyword">typeof</span>(<span class="keyword">self</span>)weakSelf = <span class="keyword">self</span>;</div><div class="line"> <span class="comment">// 从左向右</span></div><div class="line">   [<span class="built_in">UIView</span> animateWithDuration:time </div><div class="line">                         delay:<span class="number">2.0</span> </div><div class="line">                       options:<span class="number">0</span> 		</div><div class="line">                    animations:^&#123;</div><div class="line">       weakSelf.contentOffset = offset;</div><div class="line">                  &#125; completion:^(<span class="built_in">BOOL</span> finished) &#123;</div><div class="line">       <span class="comment">// 从右向左</span></div><div class="line">       [<span class="built_in">UIView</span> animateWithDuration:time </div><div class="line">                             delay:<span class="number">2.0</span></div><div class="line">                           options:<span class="number">0</span> 															  animations:^&#123;</div><div class="line">          weakSelf.contentOffset = <span class="built_in">CGPointZero</span>;</div><div class="line"></div><div class="line">                      &#125; completion:^(<span class="built_in">BOOL</span> finished) &#123;</div><div class="line">           [weakSelf startAnimate];</div><div class="line">       &#125;];</div><div class="line"></div><div class="line">   &#125;];</div><div class="line">&#125;</div><div class="line"></div><div class="line">- (<span class="keyword">void</span>)dealloc&#123;</div><div class="line">   <span class="built_in">NSLog</span>(<span class="string">@"%s"</span>, __func__)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ol>
<h1 id="二-使用"><a href="#二-使用" class="headerlink" title="二. 使用"></a>二. 使用</h1><ol>
<li><p>导入头文件 </p>
</li>
<li><p>实例化<code>CTScrollTitleView</code>并赋值给<code>navigationItem.titleView</code></p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">self</span>.navigationItem.titleView = [<span class="built_in">CTScrollTitleView</span> titleViewWithTitle:<span class="string">@"标题标题标题标题标题标题标题标题"</span>];</div></pre></td></tr></table></figure>
</li>
</ol>
<h1 id="三-简化版"><a href="#三-简化版" class="headerlink" title="三. 简化版"></a>三. 简化版</h1><ol>
<li><p>为了开发方便, 比如直接谁用 self.scrollTitle = @”标题标题标题标题标题标题标题标题标题标题”, 可做以下处理</p>
</li>
<li><p>创建<code>UIViewController</code>分类: <code>UIViewController+ScrollTitle.h</code></p>
</li>
<li><p>在头文件声明</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">UIViewController</span> (<span class="title">ScrollTitle</span>)</span></div><div class="line"><span class="comment">/** 滚动标题 */</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="built_in">NSString</span> *zy_scrollTitle;</div><div class="line"></div><div class="line"><span class="keyword">@end</span></div></pre></td></tr></table></figure>
</li>
<li><p>.m文件实现</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#import <span class="meta-string">&lt;objc/runtime.h&gt;</span></span></div><div class="line"><span class="meta">#import <span class="meta-string">"CTScrollTitleView.h"</span></span></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">UIViewController</span>()</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">weak</span>) <span class="built_in">CTScrollTitleView</span> *zy_titleView;</div><div class="line"><span class="keyword">@end</span></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">UIViewController</span> (<span class="title">ScrollTitle</span>)</span></div><div class="line"></div><div class="line">- (<span class="keyword">void</span>)setZy_scrollTitle:(<span class="built_in">NSString</span> *)zy_scrollTitle</div><div class="line">&#123;</div><div class="line">    <span class="built_in">CTScrollTitleView</span> *titleView = [<span class="built_in">CTScrollTitleView</span> titleViewWithTitle:zy_scrollTitle];</div><div class="line">    <span class="keyword">self</span>.navigationItem.titleView = titleView;</div><div class="line">    <span class="keyword">self</span>.zy_titleView = titleView;</div><div class="line">&#125;</div><div class="line">- (<span class="built_in">NSString</span> *)zy_scrollTitle</div><div class="line">&#123;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">self</span>.zy_titleView.title;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">static</span> <span class="keyword">char</span> ZYScrollTitleViewKey = <span class="string">'\0'</span>;</div><div class="line">- (<span class="keyword">void</span>)setZy_titleView:(<span class="built_in">CTScrollTitleView</span> *)zy_titleView</div><div class="line">&#123;</div><div class="line">    objc_setAssociatedObject(<span class="keyword">self</span>, &amp;ZYScrollTitleViewKey, zy_titleView, OBJC_ASSOCIATION_ASSIGN);</div><div class="line">&#125;</div><div class="line"></div><div class="line">- (<span class="built_in">CTScrollTitleView</span> *)zy_titleView</div><div class="line">&#123;</div><div class="line">    <span class="keyword">return</span> objc_getAssociatedObject(<span class="keyword">self</span>, &amp;ZYScrollTitleViewKey);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>​</p>
</li>
<li><p>直接使用<code>self.zy_scrollTitle</code>即可</p>
</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;默认情况下控制器标题过长导致无法全部显示, 解决此问题就要让标题可以滚动.&lt;/p&gt;
&lt;p&gt;实现很简单, 只要把&lt;code&gt;navigationItem.titleView&lt;/code&gt;赋值一个&lt;code&gt;UIScrollView&lt;/code&gt;, 并且让这个&lt;code&gt;UIScrollView&lt;/code&gt;自动滚动就可以了.&lt;/p&gt;
    
    </summary>
    
      <category term="Objective-C" scheme="https://yuxiang.ren/categories/Objective-C/"/>
    
    
      <category term="Objective-C" scheme="https://yuxiang.ren/tags/Objective-C/"/>
    
  </entry>
  
  <entry>
    <title>javaScript基础</title>
    <link href="https://yuxiang.ren/2017/05/22/javaScript%E5%9F%BA%E7%A1%80/"/>
    <id>https://yuxiang.ren/2017/05/22/javaScript基础/</id>
    <published>2017-05-22T01:00:05.000Z</published>
    <updated>2017-05-22T02:37:01.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、函数"><a href="#一、函数" class="headerlink" title="一、函数"></a>一、函数</h1><h2 id="1-函数的定义"><a href="#1-函数的定义" class="headerlink" title="1. 函数的定义"></a>1. 函数的定义</h2><ol>
<li><p>使用<code>function</code>定义</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">fun</span>(<span class="params"></span>) </span>&#123;</div><div class="line">  alert(<span class="string">"hello world"</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>匿名函数的方式</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 定义函数</span></div><div class="line"><span class="keyword">var</span> fun = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">  alert(<span class="string">"hello wordl"</span>);</div><div class="line">&#125;</div><div class="line"><span class="comment">// 执行</span></div><div class="line">fun();</div></pre></td></tr></table></figure>
</li>
<li><p><code>new Function</code>(不常用)</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> fun = <span class="keyword">new</span> <span class="built_in">Function</span>(<span class="string">"msg"</span>, <span class="string">"alert(msg)"</span>);</div><div class="line">fun(<span class="string">"hello world"</span>);</div></pre></td></tr></table></figure>
</li>
<li><p>函数调用</p>
<ul>
<li>调用函数的时候是通过函数名调用的,</li>
<li>定义函数的时候不能聪明.</li>
</ul>
</li>
</ol>
<a id="more"></a>
<h2 id="2-函数劫持"><a href="#2-函数劫持" class="headerlink" title="2. 函数劫持"></a>2. 函数劫持</h2><p>改变<code>javascript</code>的函数预定义好的功能</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">window</span>.alert = <span class="function"><span class="keyword">function</span>(<span class="params">msg</span>) </span>&#123;</div><div class="line">  	<span class="built_in">document</span>.write(msg)</div><div class="line">&#125;</div><div class="line">alert(<span class="string">"hello world"</span>);</div></pre></td></tr></table></figure>
<h2 id="3-全局函数"><a href="#3-全局函数" class="headerlink" title="3. 全局函数"></a>3. 全局函数</h2><ol>
<li><code>isNaN</code>: 是不是一个数字, 返回true不是数字</li>
<li><code>parseInt</code>, <code>parsetFloat</code></li>
<li><code>eval</code>: <ul>
<li>主要执行字符串,奖结果转换为数字</li>
<li>将<code>json</code>格式的字符串转换为<code>json</code></li>
</ul>
</li>
</ol>
<p># </p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;一、函数&quot;&gt;&lt;a href=&quot;#一、函数&quot; class=&quot;headerlink&quot; title=&quot;一、函数&quot;&gt;&lt;/a&gt;一、函数&lt;/h1&gt;&lt;h2 id=&quot;1-函数的定义&quot;&gt;&lt;a href=&quot;#1-函数的定义&quot; class=&quot;headerlink&quot; title=&quot;1. 函数的定义&quot;&gt;&lt;/a&gt;1. 函数的定义&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;使用&lt;code&gt;function&lt;/code&gt;定义&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;fun&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  alert(&lt;span class=&quot;string&quot;&gt;&quot;hello world&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;匿名函数的方式&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 定义函数&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; fun = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  alert(&lt;span class=&quot;string&quot;&gt;&quot;hello wordl&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 执行&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fun();&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;new Function&lt;/code&gt;(不常用)&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; fun = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Function&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;msg&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;alert(msg)&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fun(&lt;span class=&quot;string&quot;&gt;&quot;hello world&quot;&lt;/span&gt;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;函数调用&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;调用函数的时候是通过函数名调用的,&lt;/li&gt;
&lt;li&gt;定义函数的时候不能聪明.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="HTMl" scheme="https://yuxiang.ren/categories/HTMl/"/>
    
    
      <category term="javaScript html" scheme="https://yuxiang.ren/tags/javaScript-html/"/>
    
  </entry>
  
  <entry>
    <title>SVN常用命令</title>
    <link href="https://yuxiang.ren/2017/05/16/SVN%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>https://yuxiang.ren/2017/05/16/SVN常用命令/</id>
    <published>2017-05-16T00:56:21.000Z</published>
    <updated>2017-05-16T01:18:41.000Z</updated>
    
    <content type="html"><![CDATA[<ol>
<li><p>将文件checkout到本地</p>
<p><code>svn checkout &lt;path&gt;</code>;</p>
<p><code>svn co &lt;path&gt;</code></p>
</li>
<li><p>添加新的文件</p>
<p><code>svn add &lt;file&gt;</code>: 添加名为file的文件</p>
<p><code>svn add *.m</code>: 添加后缀为.m的所有文</p>
</li>
<li><p>提交到版本库</p>
<p><code>svn commit -m &#39;message&#39;</code></p>
<p><code>svn ci</code></p>
</li>
<li><p>更新到某个版本</p>
<p><code>svn update -r m &lt;path&gt;</code></p>
<p><code>svn update</code>:将当前目录以及子目录下的所有文件都更新到最新版本。 </p>
<p><code>svn up</code></p>
</li>
</ol>
<a id="more"></a>
<ol>
<li>查看文件或者目录状态<ul>
<li><code>svn status</code>: 【?：不在svn的控制中；M：内容被修改；C：发生冲突；A：预定加入到版本库；K：被锁定】</li>
<li><code>svn st</code>: 简写</li>
</ul>
</li>
<li>删除文件<ul>
<li><code>svn delete &lt;file name&gt;</code>: 删除</li>
<li><code>svn ci &quot;message&quot;</code>: 提交</li>
</ul>
</li>
<li>查看历史<ul>
<li><code>svn log</code></li>
</ul>
</li>
<li>查看文件详情<ul>
<li><code>svn info</code></li>
</ul>
</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;&lt;p&gt;将文件checkout到本地&lt;/p&gt;
&lt;p&gt;&lt;code&gt;svn checkout &amp;lt;path&amp;gt;&lt;/code&gt;;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;svn co &amp;lt;path&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;添加新的文件&lt;/p&gt;
&lt;p&gt;&lt;code&gt;svn add &amp;lt;file&amp;gt;&lt;/code&gt;: 添加名为file的文件&lt;/p&gt;
&lt;p&gt;&lt;code&gt;svn add *.m&lt;/code&gt;: 添加后缀为.m的所有文&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;提交到版本库&lt;/p&gt;
&lt;p&gt;&lt;code&gt;svn commit -m &amp;#39;message&amp;#39;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;svn ci&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;更新到某个版本&lt;/p&gt;
&lt;p&gt;&lt;code&gt;svn update -r m &amp;lt;path&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;svn update&lt;/code&gt;:将当前目录以及子目录下的所有文件都更新到最新版本。 &lt;/p&gt;
&lt;p&gt;&lt;code&gt;svn up&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="命令" scheme="https://yuxiang.ren/categories/%E5%91%BD%E4%BB%A4/"/>
    
    
      <category term="命令" scheme="https://yuxiang.ren/tags/%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>Terminal命令之wget用法</title>
    <link href="https://yuxiang.ren/2017/04/27/Terminal%E5%91%BD%E4%BB%A4%E4%B9%8Bwget%E7%94%A8%E6%B3%95/"/>
    <id>https://yuxiang.ren/2017/04/27/Terminal命令之wget用法/</id>
    <published>2017-04-27T08:09:45.000Z</published>
    <updated>2017-04-27T08:21:52.000Z</updated>
    
    <content type="html"><![CDATA[<p> wget : 一款下载命令</p>
<ol>
<li>支持断点下传功能</li>
<li>同时支持FTP和HTTP下载方式</li>
<li>支持代理服务器</li>
<li>设置方便简单</li>
<li>程序小，完全免费</li>
<li>安装: <code>brew install wget</code></li>
</ol>
<p>wget语法: wget&lt;参数&gt; 文件url</p>
<a id="more"></a>
<h1 id="下载http-ftp站点"><a href="#下载http-ftp站点" class="headerlink" title="下载http/ftp站点"></a>下载http/ftp站点</h1><ol>
<li><code>wget url</code>: 下载url页面</li>
<li><code>wget -r url</code>: 递归下载url页面</li>
<li><code>wget -p url</code>: 下载url页面下的所有资源</li>
</ol>
<h1 id="下载文件"><a href="#下载文件" class="headerlink" title="下载文件"></a>下载文件</h1><ol>
<li><code>wget -c url</code>: 断点续传下载文件</li>
<li>批量下载:<ul>
<li>如果有多个文件需要下载，那么可以生成一个文件，把每个文件的URL写一行，例如生成文件<strong>download.txt</strong>,</li>
<li><code>wget -i download.txt</code>: 下载文件用所有的url</li>
</ul>
</li>
<li>选择下载<ul>
<li><code>wget -m -regect=gif url</code></li>
<li>上面命令表示:  下载url下所有文件, 胡虐.git类型文件</li>
</ul>
</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt; wget : 一款下载命令&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;支持断点下传功能&lt;/li&gt;
&lt;li&gt;同时支持FTP和HTTP下载方式&lt;/li&gt;
&lt;li&gt;支持代理服务器&lt;/li&gt;
&lt;li&gt;设置方便简单&lt;/li&gt;
&lt;li&gt;程序小，完全免费&lt;/li&gt;
&lt;li&gt;安装: &lt;code&gt;brew install wget&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;wget语法: wget&amp;lt;参数&amp;gt; 文件url&lt;/p&gt;
    
    </summary>
    
      <category term="命令" scheme="https://yuxiang.ren/categories/%E5%91%BD%E4%BB%A4/"/>
    
    
      <category term="命令" scheme="https://yuxiang.ren/tags/%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>在阿里云上使用hexo并且用git更新</title>
    <link href="https://yuxiang.ren/2017/04/24/use-hexo-on-aliyun-and-update-with-git/"/>
    <id>https://yuxiang.ren/2017/04/24/use-hexo-on-aliyun-and-update-with-git/</id>
    <published>2017-04-24T03:28:17.000Z</published>
    <updated>2017-04-28T08:40:59.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文基于<a href="https://hexo.io" target="_blank" rel="external">https://hexo.io</a> 博客框架. 基于Node.js</p>
<ul>
<li>本文在<a href="/2016/12/02/install-hexo-on-vps-and-update-with-git/">原文</a>基础上加以修改完善</li>
<li>本文所使用的阿里云服务器系统为: <code>Ubuntu 16.04.2 LTS</code></li>
<li>本地测试环境为: <code>MacOS 10.12.4</code></li>
<li>本文为本人自己搭建博客环境时所记录的步骤, 他人按照此步骤 可能会出现我没有遇到的问题, 请自行百度/google</li>
<li>本文非图文并茂, 全程都是命令行, 也没有什么图可以贴的</li>
<li>为了防止命令输入错误, 可以直接<code>command+c</code></li>
<li>大致为: 在本地电脑上使用hexo撰写文章, 部署并测试成功后, 通过git提交到服务器上.完成博客的更新<ol>
<li>首先在服务器上部署web环境,以及git等</li>
<li>然后在本地电脑上安装hexo, git等所需环境</li>
<li>撰写文章并且更新</li>
<li>其他完善: 主题, 插件,SEO等…</li>
</ol>
</li>
<li>初来乍到, 勿喷……</li>
</ul>
<h1 id="一-准备工作"><a href="#一-准备工作" class="headerlink" title="一. 准备工作"></a>一. 准备工作</h1><ol>
<li>云服务器: 这里我使用的阿里云服务器ECS, 需要配置web环境,git等</li>
<li>本地测试环境: 需要安装hexo, git等</li>
<li>域名(非必须)</li>
</ol>
<a id="more"></a>
<h1 id="二-配置服务器端"><a href="#二-配置服务器端" class="headerlink" title="二. 配置服务器端"></a>二. 配置服务器端</h1><ul>
<li>说明: 为方便,<strong>下文中的<code>yuxiang.ren(域名)</code>,<code>106.14.9.43(主机ip)</code>…请自行替换</strong></li>
</ul>
<ol>
<li><p>登录服务器</p>
<ul>
<li><code>ssh root@ip</code></li>
</ul>
</li>
<li><p>安装所需服务</p>
<ul>
<li><p>依次执行下面命令(过程有点漫长, 耐心等待)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">apt update &amp;&amp; apt upgrade -y # 14.04 使用apt-get</div><div class="line">apt install git -y</div><div class="line">curl -sL https://deb.nodesource.com/setup | bash</div><div class="line">apt install nodejs -y</div><div class="line">apt install nginx -y</div><div class="line">cd /etc/nginx/sites-available</div><div class="line">rm -rf default</div></pre></td></tr></table></figure>
</li>
<li><p>访问ip<code>106.14.9.43</code>出现nginx默认页面表示nginx安装成功,后面还需要对ngin进一步配置</p>
</li>
</ul>
</li>
<li><p>安装git并且初始化git仓库</p>
<ul>
<li><p>依次执行一下命令</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">cd ~</div><div class="line">mkdir repos &amp;&amp; cd repos</div><div class="line">mkdir yuxiang.ren.git &amp;&amp; cd yuxiang.ren.git #yuxiang.ren.git 为存放博客的git仓库(.git后缀) 名称并没有什么要求, 我只是为了方便才这样写的</div><div class="line">git init --bare</div><div class="line">cd hooks</div><div class="line">touch post-receive</div><div class="line">vi post-receive #此命令是编辑`post-receive`文件, 也可在本地编辑完上传到对应目录替换</div></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li><p>在出现的编辑页面中输入以下内容,注意<code>yuxiang.ren</code>的替换,然后保存退出。</p>
<ul>
<li>这是一个自动更新博客源文件的脚本, 将仓库里的源文件拷贝到对应博客的源文件目录</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/bin/bash -l</span></div><div class="line">GIT_REPO=<span class="variable">$HOME</span>/repos/yuxiang.ren.git</div><div class="line">TMP_GIT_CLONE=<span class="variable">$HOME</span>/tmp/git/renyuxiang.ren</div><div class="line">PUBLIC_WWW=/var/www/yuxiang.ren <span class="comment">#网站的根目录 如果`wwww/` 下没有该文件夹 需要手动创建</span></div><div class="line">rm -rf <span class="variable">$&#123;TMP_GIT_CLONE&#125;</span></div><div class="line">git <span class="built_in">clone</span> <span class="variable">$GIT_REPO</span> <span class="variable">$TMP_GIT_CLONE</span></div><div class="line">rm -rf <span class="variable">$&#123;PUBLIC_WWW&#125;</span>/*</div><div class="line">cp -rf <span class="variable">$&#123;TMP_GIT_CLONE&#125;</span>/* <span class="variable">$&#123;PUBLIC_WWW&#125;</span></div><div class="line"><span class="built_in">cd</span> ~</div><div class="line"><span class="built_in">exit</span></div></pre></td></tr></table></figure>
</li>
<li><p>执行下面命令</p>
<ul>
<li><code>chmod +x post-receive</code></li>
</ul>
</li>
<li><p>配置<code>nginx.conf</code>文件(配置nginx服务器)</p>
<ul>
<li><p><code>vi /etc/nginx/nginx.conf</code> (也可在本地编辑完上传到对应目录替换)</p>
</li>
<li><p>在<code>http</code> 里添加一下内容</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">server &#123;</div><div class="line">	 listen 80; <span class="comment"># 监听80端口(http), 如需配置https 可自行百度</span></div><div class="line">     server_name yuxiang.ren www.yuxiang.ren; <span class="comment"># URL名字, 需要去域名服务商解析, 如何解析 自己百度</span></div><div class="line">	 root /var/www/yuxiang.ren/public/; <span class="comment"># 这个是网站的根目录 要与上面`PUBLIC_WWW`一致</span></div><div class="line">	 index index.html index.htm index.txt; <span class="comment">#这个是让nginx默认读取的文件名</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>保存退出</p>
</li>
<li><p>重启nginx : <code>service nginx restart</code></p>
<ul>
<li>如果重启失败 可通过<code>nginx -t</code>错误路径以方便处理错误</li>
</ul>
</li>
<li><p>这时候访问<code>106.14.9.43</code> 出现的应该是nginx 404页面</p>
</li>
</ul>
</li>
</ol>
<h1 id="三-配置本地环境"><a href="#三-配置本地环境" class="headerlink" title="三. 配置本地环境"></a>三. 配置本地环境</h1><ul>
<li>可能需要安装Xcode命令行工具, 我也不清楚, 因为我电脑本就安装了Xcode, 所以可以直接使用</li>
</ul>
<ol>
<li><p>安装 <code>Homebrew</code></p>
<ul>
<li><code>/usr/bin/ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;</code></li>
</ul>
</li>
<li><p>安装<code>Node.js</code></p>
<ul>
<li><code>brew install node</code></li>
</ul>
</li>
<li><p>选择博客存放目录我放在文档目录下</p>
<ul>
<li><code>cd ~/Documents</code></li>
</ul>
</li>
<li><p>将刚刚再服务器上创建的仓库clone到文档目录下</p>
<ul>
<li><code>git clone root@106.14.9.43:repos/yuxiang.ren.git</code><ul>
<li><code>106.14.9.43</code> 为主机ip地址</li>
<li><code>repos/yuxiang.ren.git</code> 为博客的仓库路径</li>
</ul>
</li>
<li>会让你输入服务器登录密码</li>
<li>然后clone一份空的git仓库</li>
</ul>
</li>
<li><p>给本地电脑安装<code>Hexo</code></p>
<ul>
<li><code>npm install -g hexo-cli</code></li>
</ul>
</li>
<li><p>初始化Hexo</p>
<ul>
<li><p>进入刚刚从服务器clone下的<code>yuxiang.ren</code>文件夹</p>
</li>
<li><p>依次执行下面命令</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">hexo init #初始化 一个博客环境, 需要下载相关文件,耐心等待</div><div class="line">hexo d -fg #部署</div><div class="line">hexo s #开启本地预览服务</div></pre></td></tr></table></figure>
</li>
</ul>
<p>然后访问 <a href="http://localhost:4000" target="_blank" rel="external">http://localhost:4000</a>  (本地的4000端口)如果看到网页表示Hexo配置成功</p>
</li>
</ol>
<h1 id="四-提交到服务器"><a href="#四-提交到服务器" class="headerlink" title="四. 提交到服务器"></a>四. 提交到服务器</h1><ol>
<li><p>git的更新命令如下</p>
<ul>
<li><p>进入博客目录</p>
</li>
<li><p>执行以下命令更新</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">git add . #把需要更新的所有文件添加到本地仓库</div><div class="line">git commit -m &quot;update message&quot; # 提交到本地仓库</div><div class="line">git push # 提交到远程仓库 这里只服务器</div></pre></td></tr></table></figure>
</li>
<li><p>如果提示需要输入密码 输入服务器密码即可</p>
</li>
</ul>
</li>
<li><p>如果提交的时候提示<code>cp: target &#39;* * *&#39; is not a directory</code>意思是这不是一个目录, 所以要去创建一个目录</p>
<ul>
<li>上文<code>PUBLIC_WWW</code>表示网站的根目录, </li>
<li>直接执行<code>mkdir /var/www/yuxiang.ren</code> 创建网站根目录</li>
<li>再次提交<ul>
<li>提示<code>Everything up-to-date</code></li>
<li>那就随便改一下重新部署并提交呗</li>
</ul>
</li>
</ul>
</li>
</ol>
<h1 id="五-博客的配置-主体更换"><a href="#五-博客的配置-主体更换" class="headerlink" title="五. 博客的配置, 主体更换,"></a>五. 博客的配置, 主体更换,</h1><p> 插件: <a href="https://hexo.io/plugins/" target="_blank" rel="external">https://hexo.io/plugins/</a></p>
<p>主题: <a href="https://hexo.io/themes/" target="_blank" rel="external">https://hexo.io/themes/</a></p>
<p>……</p>
<p>自行 百度/Google</p>
<h1 id="六-发布文章"><a href="#六-发布文章" class="headerlink" title="六. 发布文章"></a>六. 发布文章</h1><ol>
<li><p>进入网站根目录</p>
</li>
<li><p><code>hexo new 文章名字</code></p>
</li>
<li><p>编辑<code>/source/_posts/文章名字.md</code> 文件使用的是MarkDown语法</p>
<figure class="highlight markdown"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">title: title  #文章的标题</div><div class="line">date: yyyy-mm-dd #创建时间</div><div class="line">   categories: category #分类</div><div class="line">   tags: tag #标签</div><div class="line"><span class="code">      </span></div><div class="line">   #多标签请这样写：tags: [tag1,tag2,tag3]</div><div class="line">   #或者这样写： </div><div class="line"><span class="code">    #tags: </span></div><div class="line"><span class="code">      #- tag1</span></div><div class="line"><span class="code">      #- tag2 </span></div><div class="line"><span class="code">      #- tag3 </span></div><div class="line">   ---  </div><div class="line"><span class="code">     </span></div><div class="line">   #正文</div></pre></td></tr></table></figure>
</li>
<li><p>正文写完后可以再本地此时下</p>
<ul>
<li><code>hexo d -fg</code></li>
<li><code>hexo s</code></li>
<li>然后访问 <a href="http://localhost:4000" target="_blank" rel="external">http://localhost:4000</a> </li>
</ul>
</li>
<li><p>提交到服务器</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">git add .</div><div class="line">git commit -m &quot;操作内容&quot;</div><div class="line">git push</div></pre></td></tr></table></figure>
</li>
</ol>
<h1 id="七-域名绑定"><a href="#七-域名绑定" class="headerlink" title="七. 域名绑定"></a>七. 域名绑定</h1><p>自行 百度/Google</p>
<h1 id="八-最后"><a href="#八-最后" class="headerlink" title="八. 最后"></a>八. 最后</h1><p>当然你也可以放在Github上, 请自行 百度/Google</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文基于&lt;a href=&quot;https://hexo.io&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://hexo.io&lt;/a&gt; 博客框架. 基于Node.js&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;本文在&lt;a href=&quot;/2016/12/02/install-hexo-on-vps-and-update-with-git/&quot;&gt;原文&lt;/a&gt;基础上加以修改完善&lt;/li&gt;
&lt;li&gt;本文所使用的阿里云服务器系统为: &lt;code&gt;Ubuntu 16.04.2 LTS&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;本地测试环境为: &lt;code&gt;MacOS 10.12.4&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;本文为本人自己搭建博客环境时所记录的步骤, 他人按照此步骤 可能会出现我没有遇到的问题, 请自行百度/google&lt;/li&gt;
&lt;li&gt;本文非图文并茂, 全程都是命令行, 也没有什么图可以贴的&lt;/li&gt;
&lt;li&gt;为了防止命令输入错误, 可以直接&lt;code&gt;command+c&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;大致为: 在本地电脑上使用hexo撰写文章, 部署并测试成功后, 通过git提交到服务器上.完成博客的更新&lt;ol&gt;
&lt;li&gt;首先在服务器上部署web环境,以及git等&lt;/li&gt;
&lt;li&gt;然后在本地电脑上安装hexo, git等所需环境&lt;/li&gt;
&lt;li&gt;撰写文章并且更新&lt;/li&gt;
&lt;li&gt;其他完善: 主题, 插件,SEO等…&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;初来乍到, 勿喷……&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;一-准备工作&quot;&gt;&lt;a href=&quot;#一-准备工作&quot; class=&quot;headerlink&quot; title=&quot;一. 准备工作&quot;&gt;&lt;/a&gt;一. 准备工作&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;云服务器: 这里我使用的阿里云服务器ECS, 需要配置web环境,git等&lt;/li&gt;
&lt;li&gt;本地测试环境: 需要安装hexo, git等&lt;/li&gt;
&lt;li&gt;域名(非必须)&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="教程" scheme="https://yuxiang.ren/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="命令" scheme="https://yuxiang.ren/tags/%E5%91%BD%E4%BB%A4/"/>
    
      <category term="教程" scheme="https://yuxiang.ren/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>命令给安卓程序打包</title>
    <link href="https://yuxiang.ren/2017/04/12/%E5%91%BD%E4%BB%A4%E7%BB%99%E5%AE%89%E5%8D%93%E7%A8%8B%E5%BA%8F%E6%89%93%E5%8C%85/"/>
    <id>https://yuxiang.ren/2017/04/12/命令给安卓程序打包/</id>
    <published>2017-04-12T03:05:07.000Z</published>
    <updated>2017-04-28T08:36:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>在命令行，进入到项目（project，一定是project，而不是Module）对应的目录。</p>
<ol>
<li><p>先执行改变gradle的权限。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chmod +x gradlew</div></pre></td></tr></table></figure>
</li>
<li><p>然后运行打包</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./gradlew assembleRelease</div></pre></td></tr></table></figure>
<a id="more"></a>
</li>
<li><p>出现<code>BUILD SUCCESSFUL</code>后安装到手机</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb install &lt;apk路径&gt;</div></pre></td></tr></table></figure>
</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在命令行，进入到项目（project，一定是project，而不是Module）对应的目录。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;先执行改变gradle的权限。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;chmod +x gradlew&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;然后运行打包&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;./gradlew assembleRelease&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Android" scheme="https://yuxiang.ren/categories/Android/"/>
    
    
      <category term="Android" scheme="https://yuxiang.ren/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>linux常用命令</title>
    <link href="https://yuxiang.ren/2017/03/31/linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>https://yuxiang.ren/2017/03/31/linux常用命令/</id>
    <published>2017-03-31T06:32:42.000Z</published>
    <updated>2017-04-14T06:34:47.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一-系统清理"><a href="#一-系统清理" class="headerlink" title="一. 系统清理"></a>一. 系统清理</h3><ol>
<li><p>clean命令删除所有的软件安装包</p>
<ul>
<li><p>在网络连接正常的情况下，我们执行软件安装命令，软件安装结束后，以 .deb 为后缀的软件包就不再需要了。所以要对他定期清理</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get clean</div></pre></td></tr></table></figure>
</li>
<li><p>使用上面命令即可上错所有的软件包</p>
</li>
</ul>
</li>
<li><p>autoclean 删除不再可用的安装包</p>
<ul>
<li><p>与<code>clean</code>一样, 只不过它有选择地删除软件包：那些不再可用的安装包(比如，你再也不能够从软件仓库中下载到该软件包的当前版本、或更新版本)。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get autoclean</div></pre></td></tr></table></figure>
</li>
</ul>
<a id="more"></a>
</li>
<li><p>remove 删除特定软件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get remove</div></pre></td></tr></table></figure>
</li>
<li><p>purge清除软件残余</p>
<ul>
<li><p>purge 命令是 remove 命令的另一个版本，它可以在删除软件本身的同时，删除软件包的残余设置。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get purge 软件名</div></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li><p>autoremove 删除不需要的依赖包</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get autoremove</div></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="二-磁盘相关命令"><a href="#二-磁盘相关命令" class="headerlink" title="二. 磁盘相关命令"></a>二. 磁盘相关命令</h3><ol>
<li><p><code>df -lh</code></p>
<ul>
<li><p>通过这个命令可以查看磁盘的使用情况以及文件系统被挂载的位置</p>
<p><img src="https://ww4.sinaimg.cn/large/006tNc79gy1fe60rpiwfkj30li0860uk.jpg" alt=""></p>
</li>
</ul>
</li>
<li><p><code>fdisk -l</code> 查看分区信息</p>
<ul>
<li><p>下图表示一块16G的硬盘</p>
<p><img src="https://ww2.sinaimg.cn/large/006tNc79gy1fe60v7gzrnj30qu08u0v8.jpg" alt=""></p>
</li>
</ul>
</li>
<li><p>查看某目录下占用空间最多的文件或目录</p>
<ul>
<li><p>取前10个。需要先进入该目录下</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">du -cks * | sort -rn | head -n 10</div></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li><p>查看某一目录大小:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">du -sh</div></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="三-GIT相关"><a href="#三-GIT相关" class="headerlink" title="三.  GIT相关"></a>三.  GIT相关</h2><ol>
<li><p>创建一个tag</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git tag &lt;标签名&gt; -m &quot;commit message&quot;</div></pre></td></tr></table></figure>
</li>
<li><p>提交tag</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git push ---tags #将本地所有标签一次性提交到git服务器</div><div class="line">git push &lt;标签名&gt; #将指定标签提交到git服务器</div></pre></td></tr></table></figure>
</li>
<li><p>删除一个tag</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git tag -d &lt;标签名&gt;</div></pre></td></tr></table></figure>
</li>
<li><p>删除远程标签</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git push origin :&lt;标签名&gt;</div></pre></td></tr></table></figure>
</li>
<li><p>查看所有标签</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git tag</div></pre></td></tr></table></figure>
</li>
<li><p><code>git warning: LF will be replaced by CRLF in</code>解决办法</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git config core.autocrlf false</div></pre></td></tr></table></figure>
</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;一-系统清理&quot;&gt;&lt;a href=&quot;#一-系统清理&quot; class=&quot;headerlink&quot; title=&quot;一. 系统清理&quot;&gt;&lt;/a&gt;一. 系统清理&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;clean命令删除所有的软件安装包&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;在网络连接正常的情况下，我们执行软件安装命令，软件安装结束后，以 .deb 为后缀的软件包就不再需要了。所以要对他定期清理&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;sudo apt-get clean&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用上面命令即可上错所有的软件包&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;autoclean 删除不再可用的安装包&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;与&lt;code&gt;clean&lt;/code&gt;一样, 只不过它有选择地删除软件包：那些不再可用的安装包(比如，你再也不能够从软件仓库中下载到该软件包的当前版本、或更新版本)。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;sudo apt-get autoclean&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="命令" scheme="https://yuxiang.ren/categories/%E5%91%BD%E4%BB%A4/"/>
    
    
      <category term="命令" scheme="https://yuxiang.ren/tags/%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>C语言的几种排序方法</title>
    <link href="https://yuxiang.ren/2017/03/30/C%E8%AF%AD%E8%A8%80%E7%9A%84%E5%87%A0%E7%A7%8D%E6%8E%92%E5%BA%8F%E6%96%B9%E6%B3%95/"/>
    <id>https://yuxiang.ren/2017/03/30/C语言的几种排序方法/</id>
    <published>2017-03-30T07:38:24.000Z</published>
    <updated>2017-03-30T07:44:25.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一-选择排序"><a href="#一-选择排序" class="headerlink" title="一. 选择排序"></a>一. 选择排序</h3><ol>
<li><p>原理<br>首先在未排序序列中找到最小的元素，存放到排序序列的起始位置，然后再从剩余未排序元素中继续寻找最小元素，翻到排序序列末尾，以此类推，直到所有的元素均排序完毕.</p>
</li>
<li><p>基本思想</p>
<p>第一趟排序在所有待排序的n个记录中选出关键字最小的记录,将它与数据表中的第一个记录交换位置,使关键字最小的记录处于数据表的最前端;第二趟在剩下的n-1个记录中再选出关键字最 小的记录,将其与数据表中的第二个记录交换位置,使关键字次小的记录处于数据表的第二个位置;重复这样的操作,依次选出数据表中关键字第三小、第四小…的元素,将它们分别换到数据表的第三、第四…个位置上。排序共进行n-1趟,最终可实现数据表的升序排列。</p>
<a id="more"></a>
</li>
<li><p>代码</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 需要排序的数组</span></div><div class="line"><span class="keyword">int</span> nums[<span class="number">8</span>] = &#123;<span class="number">99</span>, <span class="number">12</span>, <span class="number">88</span>, <span class="number">34</span>, <span class="number">5</span>, <span class="number">44</span>, <span class="number">12</span>, <span class="number">100</span>&#125;;</div><div class="line"><span class="comment">// 计算数组长度</span></div><div class="line"><span class="keyword">int</span> length = <span class="keyword">sizeof</span>(nums) / <span class="keyword">sizeof</span>(nums[<span class="number">0</span>]);</div><div class="line"><span class="built_in">printf</span>(<span class="string">"length = %i\n"</span>, length);</div><div class="line"></div><div class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; length; i++) &#123;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"排序前: nums[%i] = %i\n"</span>, i, nums[i]);</div><div class="line">&#125;</div><div class="line">    </div><div class="line"><span class="built_in">printf</span>(<span class="string">"=====================\n"</span>);</div><div class="line">    </div><div class="line"><span class="comment">// 排序</span></div><div class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; length - <span class="number">1</span>; i++) &#123;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = i+<span class="number">1</span>; j &lt; length; j++) &#123;</div><div class="line">        <span class="keyword">if</span> (nums[i] &gt; nums[j]) &#123;</div><div class="line">            <span class="comment">// 交换位置</span></div><div class="line">			<span class="keyword">int</span> temp = nums[i];</div><div class="line">			nums[i] = nums[j];</div><div class="line">			nums[j] = temp;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">    </div><div class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; length; i++) &#123;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"排序后: nums[%i] = %i\n"</span>, i, nums[i]);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="二-冒泡排序"><a href="#二-冒泡排序" class="headerlink" title="二. 冒泡排序"></a>二. 冒泡排序</h3><ol>
<li><p>原理</p>
<p>它重复地走访过要排序的数列,一次比较两个元素,如果他们的顺序错误就把他们交换过来。走访数列的工作是重复地进行直到没有再需要交换,也就是说该数列已经排序完成。这个算法的名字由来 是因为越小的元素会经由交换慢慢“浮”到数列的顶端。</p>
</li>
<li><p>基本思想</p>
<ul>
<li>比较相邻的元素。如果第一个比第二个大,就交换他们两个。</li>
<li>对每一对相邻元素作同样的工作,从开始第一对到结尾的最后一对。在这一点,最后的元素应 该会是最大的数。</li>
<li>针对所有的元素重复以上的步骤,除了最后一个。</li>
<li>持续每次对越来越少的元素重复上面的步骤,直到没有任何一对数字需要比较。</li>
</ul>
</li>
<li><p>代码</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">int</span> nums[<span class="number">8</span>] = &#123;<span class="number">99</span>, <span class="number">12</span>, <span class="number">88</span>, <span class="number">34</span>, <span class="number">5</span>, <span class="number">44</span>, <span class="number">12</span>, <span class="number">100</span>&#125;;</div><div class="line"><span class="keyword">int</span> length = <span class="keyword">sizeof</span>(nums) / <span class="keyword">sizeof</span>(nums[<span class="number">0</span>]);</div><div class="line"></div><div class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; length; i++) &#123;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"排序前: nums[%i] = %i\n"</span>, i, nums[i]);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="built_in">printf</span>(<span class="string">"----------\n"</span>);</div><div class="line"></div><div class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; length - <span class="number">1</span>; i++) &#123;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; length - <span class="number">1</span> - i; j++) &#123;</div><div class="line">        <span class="keyword">if</span> (nums[j] &gt; nums[j + <span class="number">1</span>]) &#123;</div><div class="line">            <span class="keyword">int</span> temp = nums[j];</div><div class="line">            nums[j] = nums[j + <span class="number">1</span>];</div><div class="line">            nums[j + <span class="number">1</span>] = temp;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; length; i++) &#123;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"排序后: nums[%i] = %i\n"</span>, i, nums[i]);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>​</p>
</li>
</ol>
<h3 id="三-插入排序"><a href="#三-插入排序" class="headerlink" title="三. 插入排序"></a>三. 插入排序</h3><ol>
<li><p>原理</p>
<p>插入即表示将一个新的数据插入到一个有序数组中，并继续保持有序。例如有一个长度为N的无序数组，进行N-1次的插入即能完成排序；第一次，数组第1个数认为是有序的数组，将数组第二个元素插入仅有1个有序的数组中；第二次，数组前两个元素组成有序的数组，将数组第三个元素插入由两个元素构成的有序数组中……第N-1次，数组前N-1个元素组成有序的数组，将数组的第N个元素插入由N-1个元素构成的有序数组中，则完成了整个插入排序。</p>
</li>
<li><p>基本思想</p>
<p>插入排序是在一个已经有序的小序列的基础上，一次插入一个元素。当然，刚开始这个有序的小序列只有1个元素，就是第一个元素。比较是从有序序列的末尾开始，也就是想要插入的元素和已经有序的最大者开始比起，如果比它大则直接插入在其后面，否则一直往前找直到找到它该插入的位置。如果碰见一个和插入元素相等的，那么插入元素把想插入的元素放在相等元素的后面。所以，相等元素的前后顺序没有改变，从原无序序列出去的顺序就是排好序后的顺序，所以插入排序是稳定的。</p>
</li>
<li><p>代码</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">int</span> nums[<span class="number">8</span>] = &#123;<span class="number">99</span>, <span class="number">12</span>, <span class="number">88</span>, <span class="number">34</span>, <span class="number">5</span>, <span class="number">44</span>, <span class="number">12</span>, <span class="number">100</span>&#125;;</div><div class="line"><span class="keyword">int</span> length = <span class="keyword">sizeof</span>(nums) / <span class="keyword">sizeof</span>(nums[<span class="number">0</span>]);</div><div class="line"></div><div class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; length; i++) &#123;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"排序前: nums[%i] = %i\n"</span>, i, nums[i]);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="built_in">printf</span>(<span class="string">"----------\n"</span>);</div><div class="line"></div><div class="line"><span class="keyword">int</span> i, j, temp;</div><div class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt; length; i++) &#123;</div><div class="line">    <span class="keyword">if</span> (nums[i] &lt; nums[i - <span class="number">1</span>])&#123;</div><div class="line">        temp = nums[i];</div><div class="line">        <span class="keyword">for</span> (j = i - <span class="number">1</span>; j &gt;= <span class="number">0</span> &amp;&amp; nums[j] &gt; temp; j--)</div><div class="line">            nums[j + <span class="number">1</span>] = nums[j];</div><div class="line">        nums[j + <span class="number">1</span>] = temp;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; length; i++) &#123;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"排序后: nums[%i] = %i\n"</span>, i, nums[i]);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>​</p>
</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;一-选择排序&quot;&gt;&lt;a href=&quot;#一-选择排序&quot; class=&quot;headerlink&quot; title=&quot;一. 选择排序&quot;&gt;&lt;/a&gt;一. 选择排序&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;原理&lt;br&gt;首先在未排序序列中找到最小的元素，存放到排序序列的起始位置，然后再从剩余未排序元素中继续寻找最小元素，翻到排序序列末尾，以此类推，直到所有的元素均排序完毕.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;基本思想&lt;/p&gt;
&lt;p&gt;第一趟排序在所有待排序的n个记录中选出关键字最小的记录,将它与数据表中的第一个记录交换位置,使关键字最小的记录处于数据表的最前端;第二趟在剩下的n-1个记录中再选出关键字最 小的记录,将其与数据表中的第二个记录交换位置,使关键字次小的记录处于数据表的第二个位置;重复这样的操作,依次选出数据表中关键字第三小、第四小…的元素,将它们分别换到数据表的第三、第四…个位置上。排序共进行n-1趟,最终可实现数据表的升序排列。&lt;/p&gt;
    
    </summary>
    
      <category term="C语言" scheme="https://yuxiang.ren/categories/C%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="C语言" scheme="https://yuxiang.ren/tags/C%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu更新Nginx服务</title>
    <link href="https://yuxiang.ren/2017/03/30/Ubuntu%E6%9B%B4%E6%96%B0Nginx%E6%9C%8D%E5%8A%A1/"/>
    <id>https://yuxiang.ren/2017/03/30/Ubuntu更新Nginx服务/</id>
    <published>2017-03-30T07:25:03.000Z</published>
    <updated>2017-04-28T08:40:35.000Z</updated>
    
    <content type="html"><![CDATA[<p>Ubuntu 官方自带的 nginx 版本非常低。我安装的默认版本是1.4.6。如果需要更好的性能和功能，那么需要将 nginx 升级到最新版。目前最新版稳定版为 1.10.1，mainline 开发版是 1.11。</p>
<a id="more"></a>
<h3 id="一-确定Ubuntu版本号"><a href="#一-确定Ubuntu版本号" class="headerlink" title="一. 确定Ubuntu版本号"></a>一. 确定Ubuntu版本号</h3><ol>
<li><p>登录服务器</p>
</li>
<li><p>使用<code>lsb_release -a</code>查看版本号 返回结果如下</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">No LSB modules are available.</div><div class="line">Distributor <span class="symbol">ID:</span>	Ubuntu</div><div class="line"><span class="symbol">Description:</span>	Ubuntu <span class="number">14.04</span>.<span class="number">4</span> LTS</div><div class="line"><span class="symbol">Release:</span>	<span class="number">14.04</span> <span class="comment">#ubuntu 的版本</span></div><div class="line"><span class="symbol">Codename:</span>	trusty <span class="comment">#代码号</span></div></pre></td></tr></table></figure>
<ul>
<li>常用的 14.04 是 trusty ，12.04 是 precise ，14.10 是 utopic ，16.04 是 xenial。</li>
</ul>
</li>
</ol>
<h3 id="二-下载安装-nginx-官方服务器的验证-key"><a href="#二-下载安装-nginx-官方服务器的验证-key" class="headerlink" title="二. 下载安装 nginx 官方服务器的验证 key"></a>二. 下载安装 nginx 官方服务器的验证 key</h3><ol>
<li><code>wget http://nginx.org/keys/nginx_signing.key</code></li>
<li><code>apt-key add nginx_signing.key</code></li>
</ol>
<h3 id="三-添加官方-nginx-地址源"><a href="#三-添加官方-nginx-地址源" class="headerlink" title="三. 添加官方 nginx 地址源"></a>三. 添加官方 nginx 地址源</h3><ol>
<li><p>编辑 <code>/etc/apt/sources.list.d/nginx.list</code> 文档。</p>
</li>
<li><p>在里面添加或修改:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">#开发版</div><div class="line">deb http://nginx.org/packages/mainline/ubuntu/ `代码号` nginx</div><div class="line">deb-src http://nginx.org/packages/mainline/ubuntu/ `代码号` nginx</div><div class="line"></div><div class="line">#稳定版</div><div class="line">deb http://nginx.org/packages/debian/ `代码号` nginx</div><div class="line">deb-src http://nginx.org/packages/debian/ `代码号` ngin</div></pre></td></tr></table></figure>
<p>​</p>
<ul>
<li><p>其中<strong>代码号</strong>部分换成第一步查到的参数，mainline 根据你的需要选择 <code>mainline</code> 或是 <code>stable</code>（如果你更看重稳定性的话),比如我的 <strong>Ubuntu 14.04</strong>版安装</p>
<ul>
<li><p><strong>mainline开发版</strong>为：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">deb http://nginx.org/packages/mainline/ubuntu/ trusty nginx</div><div class="line">deb-src http://nginx.org/packages/mainline/ubuntu/ trusty nginx</div></pre></td></tr></table></figure>
</li>
<li><p><strong>Stable 稳定版</strong>为：</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">deb <span class="symbol">http:</span>/<span class="regexp">/nginx.org/packages</span><span class="regexp">/ubuntu/</span> trusty nginx</div><div class="line">deb-src <span class="symbol">http:</span>/<span class="regexp">/nginx.org/packages</span><span class="regexp">/ubuntu/</span> trusty nginx</div></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
</li>
</ol>
<h3 id="四-更新Nginx"><a href="#四-更新Nginx" class="headerlink" title="四. 更新Nginx"></a>四. 更新Nginx</h3><ol>
<li><p>安装命令:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get update &amp;&amp; apt-get install nginx</div></pre></td></tr></table></figure>
</li>
<li><p>升级命令</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get update &amp;&amp; apt-get upgrade nginx</div></pre></td></tr></table></figure>
<ul>
<li><p>如果出错，则可能你需要先删除旧的 nginx，再进行上一步骤新装处理。<br>删除旧 nginx 的命令：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">apt-get remove nginx nginx-common nginx-core</div></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ol>
<ul>
<li><p>如果出现以下提醒:</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">Configuration file <span class="string">'/etc/nginx/nginx.conf'</span></div><div class="line"> ==&gt; Modified (by you <span class="keyword">or</span> by a script) since installation.</div><div class="line"> ==&gt; Package distributor has shipped an updated version.</div><div class="line">   What would you like to <span class="keyword">do</span> about it ?  Your options <span class="symbol">are:</span></div><div class="line">    Y <span class="keyword">or</span> I  : install the package maintainer<span class="string">'s version</span></div><div class="line">    N or O  : keep your currently-installed version</div><div class="line">      D     : show the differences between the versions</div><div class="line">      Z     : start a shell to examine the situation</div><div class="line"> The default action is to keep your current version.</div><div class="line">*** nginx.conf (Y/I/N/O/D/Z) [default=N]</div></pre></td></tr></table></figure>
<ul>
<li>选择N(默认)即可</li>
</ul>
</li>
</ul>
<p>最后使用命令<code>nginx -v</code>查看当前的nginx版本如果是<code>nginx version: nginx/1.10.1</code>表示升级成功</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Ubuntu 官方自带的 nginx 版本非常低。我安装的默认版本是1.4.6。如果需要更好的性能和功能，那么需要将 nginx 升级到最新版。目前最新版稳定版为 1.10.1，mainline 开发版是 1.11。&lt;/p&gt;
    
    </summary>
    
      <category term="教程" scheme="https://yuxiang.ren/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="教程" scheme="https://yuxiang.ren/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>在Mac上配置Rect Native开发环境</title>
    <link href="https://yuxiang.ren/2017/03/30/%E5%9C%A8Mac%E4%B8%8A%E9%85%8D%E7%BD%AERect-Native%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/"/>
    <id>https://yuxiang.ren/2017/03/30/在Mac上配置Rect-Native开发环境/</id>
    <published>2017-03-30T07:06:25.000Z</published>
    <updated>2017-04-28T08:36:43.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一-环境需求"><a href="#一-环境需求" class="headerlink" title="一. 环境需求"></a>一. 环境需求</h2><p>1 .  安装Homebrew(可选)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ruby -e &quot;$(curl -fsSL &lt;a href=&quot;https://raw.githubusercontent.com/Homebrew/install/master/install&quot;&gt;https://raw.githubusercontent.com/Homebrew/install/master/install&lt;/a&gt;)</div></pre></td></tr></table></figure>
<ol>
<li><p>安装<code>watchman</code> (用于监控bug文件)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">brew install watchman</div></pre></td></tr></table></figure>
</li>
<li><p>安装<code>flow</code>(用于找出代码中可能存在的类型错误)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">bew install flow</div></pre></td></tr></table></figure>
</li>
</ol>
<a id="more"></a>
<h3 id="二-ios环境"><a href="#二-ios环境" class="headerlink" title="二. ios环境"></a>二. ios环境</h3><ul>
<li>Xcode7及以上版本</li>
</ul>
<h3 id="三-安装React-Native"><a href="#三-安装React-Native" class="headerlink" title="三. 安装React Native"></a>三. 安装<code>React Native</code></h3><ol>
<li><p>安装命令</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install -fg react-native-cli</div></pre></td></tr></table></figure>
<ul>
<li>出现下图情况需要用管理员权限</li>
<li><img src="https://ww4.sinaimg.cn/mw690/6a80ef0fgw1f4a5eimqh5j214m0t6ti8.jpg" alt="690"></li>
</ul>
</li>
</ol>
<h3 id="四-创建RReact-Native工程"><a href="#四-创建RReact-Native工程" class="headerlink" title="四. 创建RReact Native工程"></a>四. 创建<code>RReact Native</code>工程</h3><ul>
<li><p>react-native init demo</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">react-native init demo</div></pre></td></tr></table></figure>
</li>
<li><p>可能需要等待一段时间</p>
<p><img src="https://ww1.sinaimg.cn/mw690/6a80ef0fgw1f4a4q7xtxij20v404ywfr.jpg" alt=""></p>
</li>
<li><p>出现下图所示表示初始化成功</p>
<p><img src="https://ww2.sinaimg.cn/mw690/6a80ef0fgw1f4a4q94jjsj20us0e60wh.jpg" alt=""></p>
</li>
<li><p>目录结构分析</p>
<ul>
<li>默认生成<code>iOS</code>和<code>Android</code>两个平台的项目</li>
<li>其中, <code>index.android.js</code>和<code>index.ios.js</code>是<code>Android</code>和<code>iOS</code>的空壳应用文件</li>
<li><code>node_modules</code>文件夹是为<code>Node.js</code>存放和管理npm包资源,也包含<code>react-native</code>框架文件</li>
</ul>
</li>
<li><p>运行<code>iOS</code>程序</p>
<ul>
<li><p>打开<code>ios</code>文件夹下的<code>demo.xcodeproj</code>,<code>command+r</code>运行</p>
</li>
<li><p>启动<code>React native</code>服务器,不要关闭此窗口</p>
<p><img src="https://ww4.sinaimg.cn/mw690/6a80ef0fgw1f4a57e98fwj20vo0lojvz.jpg" alt=""></p>
</li>
<li><p>客户端运行界面</p>
<p><img src="https://ww4.sinaimg.cn/mw690/6a80ef0fgw1f4a58cn2ukj20ku12a75q.jpg" alt=""></p>
</li>
</ul>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一-环境需求&quot;&gt;&lt;a href=&quot;#一-环境需求&quot; class=&quot;headerlink&quot; title=&quot;一. 环境需求&quot;&gt;&lt;/a&gt;一. 环境需求&lt;/h2&gt;&lt;p&gt;1 .  安装Homebrew(可选)&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;ruby -e &amp;quot;$(curl -fsSL &amp;lt;a href=&amp;quot;https://raw.githubusercontent.com/Homebrew/install/master/install&amp;quot;&amp;gt;https://raw.githubusercontent.com/Homebrew/install/master/install&amp;lt;/a&amp;gt;)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;安装&lt;code&gt;watchman&lt;/code&gt; (用于监控bug文件)&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;brew install watchman&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安装&lt;code&gt;flow&lt;/code&gt;(用于找出代码中可能存在的类型错误)&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;bew install flow&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="教程" scheme="https://yuxiang.ren/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="教程 MacOS" scheme="https://yuxiang.ren/tags/%E6%95%99%E7%A8%8B-MacOS/"/>
    
  </entry>
  
  <entry>
    <title>OC学习</title>
    <link href="https://yuxiang.ren/2017/03/30/OC%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/"/>
    <id>https://yuxiang.ren/2017/03/30/OC基本概念/</id>
    <published>2017-03-30T06:53:12.000Z</published>
    <updated>2017-04-28T08:41:39.000Z</updated>
    
    <content type="html"><![CDATA[<ol>
<li><p><code>+load</code>和<code>+initialize</code>区别</p>
<ul>
<li><code>+load</code>: 是在类加载到内存的时候调用, 仅调用一次</li>
<li><code>+initialize</code>: 是在第一次使用类或者子类的时候调用,会调用多次</li>
</ul>
</li>
<li><p>runtime</p>
<ul>
<li><p>runtime实现的机制是运行时机制,</p>
</li>
<li><p>用法:</p>
<ul>
<li>遍历类中所有属性和方法,可以自己写一套字典转模型工具类</li>
<li>动态给分类添加属性,需求:当想把一个属性保存系统的类中交换方法,系统方法达不到我们需求,想给系统的方法扩充一些功能</li>
<li>动态添加方法</li>
</ul>
<a id="more"></a>
</li>
</ul>
</li>
<li><p><code>bounds</code>理解</p>
<ul>
<li><code>frame</code>: 控件可视范围 相对于 父控件</li>
<li><code>bounds</code>: 也是指的是范围 指的是 控件可视范围 在 ‘内容中’ 区域 . 控件可视范围相对于内容</li>
<li><code>内容</code>:每个控件都有自己内容,而且是无限大,而且这个控件的所有子控件都是相对于内容</li>
</ul>
</li>
<li><p>数据传值</p>
<ul>
<li>顺传:直接定义属性传值</li>
<li>逆传:代理,block,通知</li>
<li>通知传值:当谁也拿不到谁的事情,可以采取使用通知传值</li>
</ul>
</li>
<li><p>KVC</p>
<p>KVC全称为<code>key value coding</code>即<strong>键值编码</strong>:运行时动态的给对象发送setValue:forKey消息 设置数据;</p>
<ul>
<li>当第一次观察一个对象时,Runtime会动态的创建一个继承自该对象所属类的子类 NSKVONotifying_(父类的名字)</li>
<li>这个新创建的子类重写了所有被观察属性的 setter 方法，并且在内部给观察者发送通知，通知所有观察对象值的更改</li>
<li>最后把这个对象所在类的 isa指针 指向这个新创建的子类</li>
</ul>
</li>
<li><p>简述项目开发的步骤</p>
<ul>
<li><strong>独立开发:</strong><ul>
<li>需求文档:描述下应用功能</li>
<li>查看原型图:描述app每个界面 和 怎么与用户交互</li>
<li>根据原型图搭建基本项目结构,开始按模块去开发</li>
<li>界面搭建完,再去查看接口文档,请求数据,然后展示</li>
</ul>
</li>
<li><strong>迭代开发:</strong><ul>
<li>根据组长,项目经理提供excel去做,这里就有每月的任务</li>
<li>需要去寻找找到对应的类做事情,1.根据类名,去猜 2.通过断点去调试,一层一层去寻找</li>
</ul>
</li>
</ul>
</li>
<li><p>如何做一个新的模块</p>
<ul>
<li>根据原型图,划分结构</li>
<li>搭建界面</li>
<li>参照接口文档,请求数据,展示数据</li>
<li>调整界面细节,提高用户体验</li>
<li>处理界面业务逻辑(功能)</li>
</ul>
</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;+load&lt;/code&gt;和&lt;code&gt;+initialize&lt;/code&gt;区别&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;+load&lt;/code&gt;: 是在类加载到内存的时候调用, 仅调用一次&lt;/li&gt;
&lt;li&gt;&lt;code&gt;+initialize&lt;/code&gt;: 是在第一次使用类或者子类的时候调用,会调用多次&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;runtime&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;runtime实现的机制是运行时机制,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;用法:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;遍历类中所有属性和方法,可以自己写一套字典转模型工具类&lt;/li&gt;
&lt;li&gt;动态给分类添加属性,需求:当想把一个属性保存系统的类中交换方法,系统方法达不到我们需求,想给系统的方法扩充一些功能&lt;/li&gt;
&lt;li&gt;动态添加方法&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="iOS" scheme="https://yuxiang.ren/categories/iOS/"/>
    
    
      <category term="Objective-C" scheme="https://yuxiang.ren/tags/Objective-C/"/>
    
  </entry>
  
  <entry>
    <title>安装shadowsocks</title>
    <link href="https://yuxiang.ren/2017/03/30/install-shadowsocks-on-your-vps/"/>
    <id>https://yuxiang.ren/2017/03/30/install-shadowsocks-on-your-vps/</id>
    <published>2017-03-30T06:39:09.000Z</published>
    <updated>2017-04-28T08:38:42.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一-安装"><a href="#一-安装" class="headerlink" title="一. 安装"></a>一. 安装</h2><ol>
<li><p>登录你的vps</p>
</li>
<li><p>安装PIP环境</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">apt-get install python-gevent python-pip</div></pre></td></tr></table></figure>
</li>
<li><p>安装<code>shadowsocks</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip install shadowsocks</div></pre></td></tr></table></figure>
</li>
</ol>
<a id="more"></a>
<p>##2.  配置信息</p>
<ol>
<li>创建<code>config.json</code>文件<ul>
<li>进入shadowsocks文件夹: <code>cd /etc/shadowsocks</code></li>
<li>创建配置文件: <code>touch config.json</code></li>
</ul>
</li>
<li>编辑<code>config.json</code></li>
</ol>
<ul>
<li>打开vi编辑器: <code>vi config.json</code></li>
<li><p>按照下列格式填写配置信息</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">"server":"123.123.123.123", # 服务器地址</div><div class="line">"server_port":9000, #端口号</div><div class="line">"local_port":9000, # 本地端口号</div><div class="line">"password":"123456", # 密码</div><div class="line">"timeout":600, # 超时时间</div><div class="line">"method":"rc4-md5" # 密码类型</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>保存并且退出</p>
</li>
</ul>
<h2 id="三-开启服务"><a href="#三-开启服务" class="headerlink" title="三. 开启服务"></a>三. 开启服务</h2><ol>
<li>执行启动服务器: <code>nohup ssserver -c /etc/shadowsocks/config.json &gt; log &amp;</code></li>
<li>设置开机启动: <code>/usr/local/bin/ssserver -c /etc/shadowsocks/config.json</code></li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一-安装&quot;&gt;&lt;a href=&quot;#一-安装&quot; class=&quot;headerlink&quot; title=&quot;一. 安装&quot;&gt;&lt;/a&gt;一. 安装&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;登录你的vps&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安装PIP环境&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;apt-get install python-gevent python-pip&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安装&lt;code&gt;shadowsocks&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;pip install shadowsocks&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="教程" scheme="https://yuxiang.ren/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="教程 翻墙" scheme="https://yuxiang.ren/tags/%E6%95%99%E7%A8%8B-%E7%BF%BB%E5%A2%99/"/>
    
  </entry>
  
  <entry>
    <title>Android-fragment</title>
    <link href="https://yuxiang.ren/2017/03/24/Android-fragment/"/>
    <id>https://yuxiang.ren/2017/03/24/Android-fragment/</id>
    <published>2017-03-24T03:03:01.000Z</published>
    <updated>2017-03-24T04:02:59.000Z</updated>
    
    <content type="html"><![CDATA[<p>Fragment</p>
<a id="more"></a>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Fragment&lt;/p&gt;
    
    </summary>
    
      <category term="Android" scheme="https://yuxiang.ren/categories/Android/"/>
    
    
      <category term="Android" scheme="https://yuxiang.ren/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>android-基本概念</title>
    <link href="https://yuxiang.ren/2017/03/24/android-%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/"/>
    <id>https://yuxiang.ren/2017/03/24/android-基本概念/</id>
    <published>2017-03-24T01:23:22.000Z</published>
    <updated>2017-04-21T09:10:56.000Z</updated>
    
    <content type="html"><![CDATA[<p>Android的一些基本的概念, 名词解释等…..</p>
<h2 id="1-安卓的五种布局"><a href="#1-安卓的五种布局" class="headerlink" title="1. 安卓的五种布局"></a>1. 安卓的五种布局</h2><ol>
<li>线性布局, 分水平布局和垂直布局, </li>
<li>相对布局, </li>
<li>帧布局</li>
<li>表格布局</li>
<li>绝对布局</li>
</ol>
<a id="more"></a>
<h2 id="2-数据存储的几种方式"><a href="#2-数据存储的几种方式" class="headerlink" title="2. 数据存储的几种方式"></a>2. 数据存储的几种方式</h2><ol>
<li>保存到文件</li>
<li>SQLite数据库存储</li>
<li>内容提供者</li>
<li>sharedpreferences保存数据</li>
<li>网络</li>
</ol>
<h2 id="3-文件的权限"><a href="#3-文件的权限" class="headerlink" title="3. 文件的权限"></a>3. 文件的权限</h2><ol>
<li><p><code>MODE_PRIVATE</code>: 私有模式, 只能被应用本身访问,写入内容会覆盖远内容, 如果要追加, 可以使用<code>MODE_APPEND</code>, 为默认操作模式</p>
</li>
<li><p><code>MODE_APPEND</code>: 该模式下会检测文件是否存在, 存在就往文件里最佳, 否则就穿件新的文件</p>
</li>
<li><p><code>MODE_WOELD_READABLE</code>、<code>MODE_WORLD_WRITEABLE</code>用来控制其他应用是否有权限读写该文件</p>
<ul>
<li><p><code>MODE_WORLD_READABLE</code>: 表示当前文件可以被其他应用读取;</p>
</li>
<li><p><code>MODE_WORLD_WRITEABLE</code>: 表示当前文件可以被其他应用写入;</p>
</li>
<li><p>如果希望文件被其他应用读写,可以传入:</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">openFileOutput(<span class="string">"文件名"</span>, Context.MODE_WORLD_READABLE + Context.MODE_WORLD_WEITEABLE);</div></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ol>
<ul>
<li>Android 有一套自己的安全模型, 但应用程序(.apk)再安装时系统会分给他一个userid, 当该应用要去访问其他应用资源文件时, 就需要userid匹配. 默认情况下,任何应用穿件的文件 sharedpreferences,数据库,都应该试试有的(位于/data/data/<package name="">/files), 其他程序无法访问, 除非再创建的时指定了<code>Context.MODE_WORLD_READABLE</code>或者<code>Context.MODE_WORLD_WRITEABLE</code>.</package></li>
</ul>
<h2 id="4-四大组件"><a href="#4-四大组件" class="headerlink" title="4. 四大组件"></a>4. 四大组件</h2><ol>
<li>Activity: 用于表现功能。</li>
<li>Service: 后台运行服务，不提供界面呈现</li>
<li>BroadcastReceiver: 用于接收广播。</li>
<li>内容提供商:支持在多个应用中存储和读取数据，相当于<code>数据库</code></li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Android的一些基本的概念, 名词解释等…..&lt;/p&gt;
&lt;h2 id=&quot;1-安卓的五种布局&quot;&gt;&lt;a href=&quot;#1-安卓的五种布局&quot; class=&quot;headerlink&quot; title=&quot;1. 安卓的五种布局&quot;&gt;&lt;/a&gt;1. 安卓的五种布局&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;线性布局, 分水平布局和垂直布局, &lt;/li&gt;
&lt;li&gt;相对布局, &lt;/li&gt;
&lt;li&gt;帧布局&lt;/li&gt;
&lt;li&gt;表格布局&lt;/li&gt;
&lt;li&gt;绝对布局&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="Android" scheme="https://yuxiang.ren/categories/Android/"/>
    
    
      <category term="Android" scheme="https://yuxiang.ren/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Android Activity</title>
    <link href="https://yuxiang.ren/2017/02/10/Android-Activity/"/>
    <id>https://yuxiang.ren/2017/02/10/Android-Activity/</id>
    <published>2017-02-10T01:01:47.000Z</published>
    <updated>2017-02-10T07:15:13.000Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a>
]]></content>
    
    <summary type="html">
    
      &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;

    
    </summary>
    
      <category term="Android" scheme="https://yuxiang.ren/categories/Android/"/>
    
    
      <category term="Android" scheme="https://yuxiang.ren/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>learn Android</title>
    <link href="https://yuxiang.ren/2017/02/09/learn-Android/"/>
    <id>https://yuxiang.ren/2017/02/09/learn-Android/</id>
    <published>2017-02-09T08:59:49.000Z</published>
    <updated>2017-02-09T09:01:37.000Z</updated>
    
    <content type="html"><![CDATA[<p>Now learning Android ….</p>
<a id="more"></a>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Now learning Android ….&lt;/p&gt;
    
    </summary>
    
      <category term="Android" scheme="https://yuxiang.ren/categories/Android/"/>
    
    
      <category term="Android" scheme="https://yuxiang.ren/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>愿被这个世界温柔以待</title>
    <link href="https://yuxiang.ren/2017/01/28/2017/"/>
    <id>https://yuxiang.ren/2017/01/28/2017/</id>
    <published>2017-01-27T16:19:56.000Z</published>
    <updated>2017-04-28T08:33:32.000Z</updated>
    
    <content type="html"><![CDATA[<p>2017年注定是一个悲伤的一年!</p>
<p>今天是大连初一, 夜已深, 久久不能入眠, 不知是因为外面的鞭炮声还是内心的不安……</p>
<p>有时候想想, 还是自己太天真了, 大多时候只因自己的一时兴起, 做了太多的错误的事情, 导致了26岁的我依旧还是一条单身汪, 眼看这一起上学的同学都结婚的结婚,生小孩的生小孩, 说自己心里不急的那肯定是假的…</p>
<a id="more"></a>
<p>失去后再珍惜,还有什么意义….  但如果没有失去, 怎么能知道珍惜的重要性… 或许这就是想要知道珍惜的重要性而要付出的代价吧。</p>
<p>有些东西，错过了就是错过了，</p>
<p>虽然这个博客对外开房。但 毕竟，这个网站没有人知道， 也没有人会来看，哈哈~</p>
<p>话说，现在过年一点意思也没有了……</p>
<p>希望你能遇到个对你好的人……</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;2017年注定是一个悲伤的一年!&lt;/p&gt;
&lt;p&gt;今天是大连初一, 夜已深, 久久不能入眠, 不知是因为外面的鞭炮声还是内心的不安……&lt;/p&gt;
&lt;p&gt;有时候想想, 还是自己太天真了, 大多时候只因自己的一时兴起, 做了太多的错误的事情, 导致了26岁的我依旧还是一条单身汪, 眼看这一起上学的同学都结婚的结婚,生小孩的生小孩, 说自己心里不急的那肯定是假的…&lt;/p&gt;
    
    </summary>
    
      <category term="杂碎" scheme="https://yuxiang.ren/categories/%E6%9D%82%E7%A2%8E/"/>
    
    
      <category term="情感" scheme="https://yuxiang.ren/tags/%E6%83%85%E6%84%9F/"/>
    
  </entry>
  
  <entry>
    <title>install VPN on your vps</title>
    <link href="https://yuxiang.ren/2017/01/16/install-VPN-on-your-vps/"/>
    <id>https://yuxiang.ren/2017/01/16/install-VPN-on-your-vps/</id>
    <published>2017-01-16T07:25:07.000Z</published>
    <updated>2017-04-28T08:38:54.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、安装环境"><a href="#一、安装环境" class="headerlink" title="一、安装环境"></a>一、安装环境</h3><ol>
<li>ubuntu 14.04</li>
</ol>
<h3 id="二、检查ppp-tun环境"><a href="#二、检查ppp-tun环境" class="headerlink" title="二、检查ppp/tun环境"></a>二、检查ppp/tun环境</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cat /dev/net/tun</div></pre></td></tr></table></figure>
<ul>
<li>必须返回是:<code>cat: /dev/net/tun: File descriptor in bad state</code></li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cat /dev/ppp</div></pre></td></tr></table></figure>
<ul>
<li>必须返回是<code>cat: /dev/ppp: No such device or address</code></li>
</ul>
<p>如果不是, 请联系你的vps提供商</p>
<a id="more"></a>
<h3 id="三、安装脚本"><a href="#三、安装脚本" class="headerlink" title="三、安装脚本"></a>三、安装脚本</h3><ol>
<li><p>下载脚本:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">wget --no-check-certificate https://raw.githubusercontent.com/quericy/one-key-ikev2-vpn/master/one-key-ikev2.sh</div></pre></td></tr></table></figure>
</li>
<li><p>安装</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">chmod +x one-key-ikev2.sh</div><div class="line">bash one-key-ikev2.sh</div></pre></td></tr></table></figure>
<p>这里需要注意的是让你选择vpn类型: <strong>OpenVZ还是Xen、KVM</strong>, 自己可询问vps提供商, 或者通过其他途径, 其他选项 一路回车就可以.</p>
<p>如图情况表示配置完成, 可根据自身情况修改用户名、密码、密钥等</p>
<p><img src="https://ww2.sinaimg.cn/large/006y8lVagw1fbsi9xr8x7j30w6092adm.jpg" alt="installed"></p>
</li>
<li><p>修改/添加用户</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vi /usr/local/etc/ipsec.secrets</div></pre></td></tr></table></figure>
<p>内容如下:</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">: RSA server.pem </div><div class="line">: PSK <span class="string">"myPSKkey"</span> <span class="comment">#表示贡献密钥</span></div><div class="line">: XAUTH <span class="string">"myXAUTHPass"</span></div><div class="line">myUserName1 %any : EAP <span class="string">"myUserPass1"</span> <span class="comment">#用户名以及密码</span></div><div class="line">myUserName2 %any : EAP <span class="string">"myUserPass2"</span> <span class="comment">#用户名以及密码</span></div></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="四、开机启动-ubuntu"><a href="#四、开机启动-ubuntu" class="headerlink" title="四、开机启动(ubuntu)"></a>四、开机启动(ubuntu)</h3><ol>
<li><p>ubuntu系统</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chmod +x /etc/rc.local &amp;&amp; echo &quot;/usr/local/sbin/ipsec start&quot; &gt;&gt; /etc/rc.local</div></pre></td></tr></table></figure>
</li>
<li><p>打开sysctl文件:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vi /etc/sysctl.conf</div></pre></td></tr></table></figure>
<ul>
<li>找到 <code>net.ipv4.ip_forward=1</code>，删除前面的“#”注释符（按<code>I键</code>进入编辑模式），并保存退出（按<code>Esc键</code>退出编辑模式，然后输入<code>:wq</code>保存并退出）。</li>
</ul>
</li>
<li><p>使用以下指令刷新sysctl：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sysctl -p</div></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="五、卸载"><a href="#五、卸载" class="headerlink" title="五、卸载"></a>五、卸载</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd /root/strongswan-5.3.5</div><div class="line">make uninstall</div></pre></td></tr></table></figure>
<h3 id="六、其他命令"><a href="#六、其他命令" class="headerlink" title="六、其他命令"></a>六、其他命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">ipsec start # 启动pvn</div><div class="line">ipsec status #vpn状态</div><div class="line">ipsec restart #重启vpn</div><div class="line">ipsec stop #停止vpn</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;一、安装环境&quot;&gt;&lt;a href=&quot;#一、安装环境&quot; class=&quot;headerlink&quot; title=&quot;一、安装环境&quot;&gt;&lt;/a&gt;一、安装环境&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;ubuntu 14.04&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;二、检查ppp-tun环境&quot;&gt;&lt;a href=&quot;#二、检查ppp-tun环境&quot; class=&quot;headerlink&quot; title=&quot;二、检查ppp/tun环境&quot;&gt;&lt;/a&gt;二、检查ppp/tun环境&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;cat /dev/net/tun&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;必须返回是:&lt;code&gt;cat: /dev/net/tun: File descriptor in bad state&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;cat /dev/ppp&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;必须返回是&lt;code&gt;cat: /dev/ppp: No such device or address&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果不是, 请联系你的vps提供商&lt;/p&gt;
    
    </summary>
    
      <category term="教程" scheme="https://yuxiang.ren/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="教程 翻墙" scheme="https://yuxiang.ren/tags/%E6%95%99%E7%A8%8B-%E7%BF%BB%E5%A2%99/"/>
    
  </entry>
  
  <entry>
    <title>短发姑娘也很美</title>
    <link href="https://yuxiang.ren/2016/12/08/short-haired-girl-is-also-good/"/>
    <id>https://yuxiang.ren/2016/12/08/short-haired-girl-is-also-good/</id>
    <published>2016-12-08T05:52:20.000Z</published>
    <updated>2017-04-28T08:42:10.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>其实, 短发姑娘也好看…<br><a href="https://zy.yuxiang.ren" target="_blank" rel="external">https://zy.yuxiang.ren</a></p>
</blockquote>
<p><img src="https://ww4.sinaimg.cn/large/65e4f1e6gw1fajlrwunrsj20pm0zkwgl.jpg" width="300"></p>
<h2 id="长发的时候"><a href="#长发的时候" class="headerlink" title="长发的时候"></a>长发的时候</h2><a id="more"></a>
<p><img src="https://ww3.sinaimg.cn/large/65e4f1e6gw1fajc9arj76j20k00zkn0a.jpg" width="300"></p>
<h2 id="短发了"><a href="#短发了" class="headerlink" title="短发了"></a>短发了</h2><p><img src="https://ww1.sinaimg.cn/large/65e4f1e6gw1fajca03y5fj20k00zk0vj.jpg" width="300">   <img src="https://ww4.sinaimg.cn/large/65e4f1e6gw1fajlrdqhtej20k00zk0uq.jpg" width="300"></p>
<blockquote>
<p>每一个剪短发的姑娘都是一个有故事的人…</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;其实, 短发姑娘也好看…&lt;br&gt;&lt;a href=&quot;https://zy.yuxiang.ren&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://zy.yuxiang.ren&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://ww4.sinaimg.cn/large/65e4f1e6gw1fajlrwunrsj20pm0zkwgl.jpg&quot; width=&quot;300&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;长发的时候&quot;&gt;&lt;a href=&quot;#长发的时候&quot; class=&quot;headerlink&quot; title=&quot;长发的时候&quot;&gt;&lt;/a&gt;长发的时候&lt;/h2&gt;
    
    </summary>
    
      <category term="杂碎" scheme="https://yuxiang.ren/categories/%E6%9D%82%E7%A2%8E/"/>
    
    
      <category term="杂碎" scheme="https://yuxiang.ren/tags/%E6%9D%82%E7%A2%8E/"/>
    
  </entry>
  
  <entry>
    <title>重写UIScrollView分类dealloc错误</title>
    <link href="https://yuxiang.ren/2016/12/06/UIScrollView-Category-error-message-with-deallocated-instance/"/>
    <id>https://yuxiang.ren/2016/12/06/UIScrollView-Category-error-message-with-deallocated-instance/</id>
    <published>2016-12-06T01:25:01.000Z</published>
    <updated>2017-04-13T07:51:46.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>[UIScrollView _systemGestureStateChanged:]: message sent to deallocated instance&gt; 错误解决方法<br>[UITableViewWrapperView _systemGestureStateChanged] 解决亦是如此</p>
</blockquote>
<p>今天一个朋友自己的程序出现了一个bug, 不知道怎么解决, 他把报错内容给我, 报错内容如下:</p>
<p><img src="https://ww4.sinaimg.cn/large/65e4f1e6gw1fagsd983rsj21g60ggjyt.jpg" width="600"><br>就是普通的僵尸对象错误, 可是解决就不是那么简单了…</p>
<p>我翻边了各大国内过外网站, 终于再一个不显眼的地方看到了大致是因为在<code>UIScrollView</code>分类重写了<code>dealloc</code>方法导致.</p>
<a id="more"></a>
<p>于是我去项目里看一下<code>UIScrollView</code>的分类. 果真, 这个第三方重写了<code>dealoc</code>, 把它注释掉果然没有出现僵尸对象了.</p>
<p>可是问题又来了,这个分类是在<code>dealloc</code>里移除监听的<br><img src="https://ww4.sinaimg.cn/large/65e4f1e6gw1fagsjlodobj20qw04ywfe.jpg" width="500"></p>
<p>我想到了<code>MJRefresh</code>使用的也是同样的原理, 于是我去看了他的代码,他是再这里移除监听的<br><img src="https://ww4.sinaimg.cn/large/65e4f1e6gw1fagsl6oopij210a07yacr.jpg" width="500"></p>
<p>那我们就学着他<br><img src="https://ww4.sinaimg.cn/large/65e4f1e6gw1fagslu9vecj20zk0ba41t.jpg" width="500"></p>
<p>重新运行程序, 问题解决.</p>
<p>然而, 又有新的问题出现, 就是通知移除的问题, 为了彻底解决自己写了个.<br>代码地址:<a href="https://github.com/shlyren/ZYScaleHeader" target="_blank" rel="external">https://github.com/shlyren/ZYScaleHeader</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;[UIScrollView _systemGestureStateChanged:]: message sent to deallocated instance&amp;gt; 错误解决方法&lt;br&gt;[UITableViewWrapperView _systemGestureStateChanged] 解决亦是如此&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;今天一个朋友自己的程序出现了一个bug, 不知道怎么解决, 他把报错内容给我, 报错内容如下:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://ww4.sinaimg.cn/large/65e4f1e6gw1fagsd983rsj21g60ggjyt.jpg&quot; width=&quot;600&quot;&gt;&lt;br&gt;就是普通的僵尸对象错误, 可是解决就不是那么简单了…&lt;/p&gt;
&lt;p&gt;我翻边了各大国内过外网站, 终于再一个不显眼的地方看到了大致是因为在&lt;code&gt;UIScrollView&lt;/code&gt;分类重写了&lt;code&gt;dealloc&lt;/code&gt;方法导致.&lt;/p&gt;
    
    </summary>
    
      <category term="error" scheme="https://yuxiang.ren/categories/error/"/>
    
    
      <category term="Xcode" scheme="https://yuxiang.ren/tags/Xcode/"/>
    
      <category term="error" scheme="https://yuxiang.ren/tags/error/"/>
    
  </entry>
  
</feed>
